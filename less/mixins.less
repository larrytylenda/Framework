
.user-select(@type) when (@type = none) {
  -ms-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}

.selection(@args) {
  ::-moz-selection: @arguments;
  ::selection: @arguments;
}

.appearance(@args) {
  -moz-appearance: @arguments;
  -webkit-appearance: @arguments;
  appearance: @arguments;
}

.placeholder-shown(@args) {
  &:-ms-input-placeholder: @arguments;
  &:-moz-placeholder: @arguments;
  &:-webkit-input-placeholder: @arguments;
  &:placeholder-shown: @arguments;
}

.read-only(@args) {
  &:-moz-read-only,
  &:read-only {
    @arguments
  }
}
.read-write(@args) {
  &:-moz-read-write,
  &:read-write {
    @arguments
  }
}

.dir(@ltr, @args) {
  &:-moz-dir(@ltr),
  &:dir(@ltr) {
    @args;
  }
}

.any-link(@args) {
  &:-moz-any-link,
  &:any-link {
    @arguments
  }
}
.scope(@args) {
  &:-moz-scope,
  &:scope {
    @arguments
  }
}

.text-overflow(@args) {
  -o-text-overflow: @arguments;
  text-overflow: @arguments;
}
.background-clip(@args) {
  -moz-background-clip: @arguments;
  -o-background-clip: @arguments;
  -webkit-background-clip: @arguments;
  background-clip: @arguments;
}
.background-origin(@args) {
  -moz-background-origin: @arguments;
  -o-background-origin: @arguments;
  -webkit-background-origin: @arguments;
  background-origin: @arguments;
}
.background-size(@args) {
  -moz-background-size: @arguments;
  -o-background-size: @arguments;
  -webkit-background-size: @arguments;
  background-size: @arguments;
}
.box-sizing(@args) {
  -webkit-box-sizing: @arguments;
  box-sizing: @arguments;
}

.box-shadow(@args) {
  -webkit-box-shadow: @arguments;
  box-shadow: @arguments;
}

.box-decoration(@args) {
  -webkit-box-decoration: @arguments;
  box-decoration: @arguments;
}

.box-decoration-break(@args) {
  -webkit-box-decoration-break: @arguments;
  box-decoration-break: @arguments;
}

.clip-path(@args) {
  -webkit-clip-path: @arguments;
  clip-path: @arguments;
}

.filter(@args) {
  -webkit-filter: @arguments;
  filter: @arguments;
}

.hyphens(@args) {
  -ms-hyphens: @arguments;
  -moz-hyphens: @arguments;
  -webkit-hyphens: @arguments;
  hyphens: @arguments;
}

.min-device-pixel-ratio(@args) {
  -webkit-min-device-pixel-ratio: @arguments;
  min-device-pixel-ratio: @arguments;
}

.max-device-pixel-ratio(@args) {
  -webkit-max-device-pixel-ratio: @arguments;
  max-device-pixel-ratio: @arguments;
}

.mask(@args) {
  -webkit-mask: @arguments;
  mask: @arguments;
}

.mask-box-image(@args) {
  -webkit-mask-box-image: @arguments;
  mask-box-image: @arguments;
}

.mask-clip(@args) {
  -webkit-mask-clip: @arguments;
  mask-clip: @arguments;
}

.mask-image(@args) {
  -webkit-mask-image: @arguments;
  mask-image: @arguments;
}

.mask-origin(@args) {
  -webkit-mask-origin: @arguments;
  mask-origin: @arguments;
}

.mask-position(@args) {
  -webkit-mask-position: @arguments;
  mask-position: @arguments;
}

.mask-repeat(@args) {
  -webkit-mask-repeat: @arguments;
  mask-repeat: @arguments;
}

.mask-size(@args) {
  -webkit-mask-size: @arguments;
  mask-size: @arguments;
}

.mask-type(@args) {
  mask-type: @arguments;
}

.cursor(@type) when (@type = zoom-in) {
  cursor: -moz-zoom-in;
  cursor: -webkit-zoom-in;
  cursor: zoom-in;
}
.cursor(@type) when (@type = zoom-out) {
  cursor: -moz-zoom-out;
  cursor: -webkit-zoom-out;
  cursor: zoom-out;
}
.cursor(@type) when (@type = grab) {
  cursor: -moz-grab;
  cursor: -webkit-grab;
  cursor: grab;
}
.cursor(@type) when (@type = grabbing) {
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

.cursor(@type) {

}

.touch-action(@args) {
  -ms-touch-action: @arguments;
  touch-action: @arguments;
}

.text-size-adjust(@args) {
  -webkit-text-size-adjust: @arguments;
  text-size-adjust: @arguments;
}

.shape-margin(@args) {
  -webkit-shape-margin: @arguments;
  shape-margin: @arguments;
}

.shape-outside(@args) {
  -webkit-shape-outside: @arguments;
  shape-outside: @arguments;
}

.shape-image-threshold(@args) {
  -webkit-shape-image-threshold: @arguments;
  shape-image-threshold: @arguments;
}

.text-decoration-color(@args) {
  -moz-text-decoration-color: @arguments;
  -webkit-text-decoration-color: @arguments;
  text-decoration-color: @arguments;
}

.text-decoration-line(@args) {
  -moz-text-decoration-line: @arguments;
  -webkit-text-decoration-line: @arguments;
  text-decoration-line: @arguments;
}

.text-decoration-style(@args) {
  -moz-text-decoration-style: @arguments;
  -webkit-text-decoration-style: @arguments;
  text-decoration-style: @arguments;
}

.border-image(@args) {
  -moz-border-image: @arguments;
  -webkit-border-image: @arguments;
  -o-border-image: @arguments;
  border-image: @arguments;
}

.tab-size(@args) {
  -moz-tab-size: @arguments;
  -o-tab-size: @arguments;
  tab-size: @arguments;
}

.fill-available(@args) {
  -moz-available: @arguments;
  -webkit-fill-available: @arguments;
  fill-available: @arguments;
}

.max-content(@args) {
  -moz-max-content: @arguments;
  -webkit-max-content: @arguments;
  max-content: @arguments;
}

.min-content(@args) {
  -moz-min-content: @arguments;
  -webkit-min-content: @arguments;
  min-content: @arguments;
}

.fit-content(@args) {
  -moz-fit-content: @arguments;
  -webkit-fit-content: @arguments;
  fit-content: @arguments;
}

.flow-into(@args) {
  -ms-flow-into: @arguments;
  -webkit-flow-into: @arguments;
  flow-into: @arguments;
}

.flow-from(@args) {
  -ms-flow-from: @arguments;
  -webkit-flow-from: @arguments;
  flow-from: @arguments;
}

.region-fragment(@args) {
  -webkit-region-fragment: @arguments;
  region-fragment: @arguments;
}

.break-before(@args) {
  -webkit-break-before: @arguments;
  break-before: @arguments;
}

.break-after(@args) {
  -webkit-break-after: @arguments;
  break-after: @arguments;
}

.break-inside(@args) {
  -webkit-break-inside: @arguments;
  break-inside: @arguments;
}

.grid-columns(@args) {
  -ms-grid-columns: @arguments;
  grid-columns: @arguments;
}
.grid-row(@args) {
  -ms-grid-row: @arguments;
  grid-row: @arguments;
}

.object-fit(@args) {
  -o-object-fit: @arguments;
  object-fit: @arguments;
}

.object-position(@args) {
  -o-object-position: @arguments;
  object-position: @arguments;
}

.font-kerning(@args) {
//// Font-variants
}

.column-count(@args) {
  -moz-column-count: @arguments;
  -webkit-column-count: @arguments;
  column-count: @arguments;
}
.column-width(@args) {
  -moz-column-width: @arguments;
  -webkit-column-width: @arguments;
  column-width: @arguments;
}
.column-gap(@args) {
  -moz-column-gap: @arguments;
  -webkit-column-gap: @arguments;
  column-gap: @arguments;
}
.column-rule(@args) {
  -moz-column-rule: @arguments;
  -webkit-column-rule: @arguments;
  column-rule: @arguments;
}
.columns(@args) {
  -moz-columns: @arguments;
  -webkit-columns: @arguments;
  columns: @arguments;
}
.break-before(@args) {
  -moz-break-before: @arguments;
  -webkit-break-before: @arguments;
  break-before: @arguments;
}

.break-after(@args) {
  -moz-break-after: @arguments;
  -webkit-break-after: @arguments;
  break-after: @arguments;
}

.break-inside(@args) {
  -moz-break-inside: @arguments;
  -webkit-break-inside: @arguments;
  break-inside: @arguments;
}
.column-fill(@args) {
  -moz-column-fill: @arguments;
  -webkit-column-fill: @arguments;
  column-fill: @arguments;
}
.column-span(@args) {
  -moz-column-span: @arguments;
  -webkit-column-span: @arguments;
  column-span: @arguments;
}

.transform(@args) {
  -ms-transform: @arguments;
  -moz-transform: @arguments;
  -webkit-transform: @arguments;
  -o-transform: @arguments;
  transform: @arguments;
}
.transform-origin(@args) {
  -ms-transform-origin: @arguments;
  -moz-transform-origin: @arguments;
  -webkit-transform-origin: @arguments;
  -o-transform-origin: @arguments;
  transform-origin: @arguments;
}
.transform-style(@args) {
  -ms-transform-style: @arguments;
  -moz-transform-style: @arguments;
  -webkit-transform-style: @arguments;
  -o-transform-style: @arguments;
  transform-style: @arguments;
}
.perspective(@args) {
  -ms-perspective: @arguments;
  -moz-perspective: @arguments;
  -webkit-perspective: @arguments;
  -o-perspective: @arguments;
  perspective: @arguments;
}
.perspective-origin(@args) {
  -ms-perspective-origin: @arguments;
  -moz-perspective-origin: @arguments;
  -webkit-perspective-origin: @arguments;
  -o-perspective-origin: @arguments;
  perspective-origin: @arguments;
}
.backface-visibility(@args) {
  -ms-backface-visibility: @arguments;
  -moz-backface-visibility: @arguments;
  -webkit-backface-visibility: @arguments;
  -o-backface-visibility: @arguments;
  backface-visibility: @arguments;
}
